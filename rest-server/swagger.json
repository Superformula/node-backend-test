{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "node-backend-test",
    "description": "API documentation",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:3396",
  "basePath": "/api",
  "tags": [
    {
      "name": "Users",
      "description": "API for users"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/user": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Create new user",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User that we want to create",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "User is created",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Failed to create user"
          }
        }
      },
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Fetch all users",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          },
          "400": {
            "description": "Failed to fetch users"
          }
        }
      }
    },
    "/users/:_id": {
      "parameters": [
        {
          "name": "_id",
          "in": "path",
          "required": true,
          "description": "ID of specific user",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Fetch user with given ID",
        "responses": {
          "200": {
            "description": "User is found",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Failed to fetch user"
          }
        }
      },
      "delete": {
        "summary": "Delete user with given ID",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "User is deleted",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Failed to delete user"
          }
        }
      },
      "put": {
        "summary": "Update user with give ID",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User with new values of properties",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User is updated",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "required": [
        "_id",
        "name",
        "dob",
        "address",
        "description",
        "createdAt",
        "updatedAt"
      ],
      "properties": {
        "_id": {
          "type": "string",
          "uniqueItems": true
        },
        "name": {
          "type": "string"
        },
        "dob": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        }
      }
    },
    "Users": {
      "type": "array",
      "$ref": "#/definitions/User"
    }
  }
}