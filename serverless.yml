

service: users-api

provider:
  name: aws
  runtime: nodejs10.x
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/users


package:
  exclude:
    - .dynamodb/**
    - coverage/**
    - src/**
    - test/**
    - '*.md'
    - '*.js'
    - '*.json'
    - '*.lock'
  include:
    - node_modules
    - dist/**/*.js

custom:
  dynamodb:
    stages:
      - local
    start:
      port: 8000
      inMemory: true
      heapInitial: 200m
      heapMax: 1g
      migrate: true
      seed: true
      convertEmptyValues: true  

functions:
  getUser:
    handler: dist/index.getUser
    events:
      - http:
          path: users/{id}
          method: get
          request:
            parameters:
              paths:
                id: true

  createUser:
    handler: dist/index.createUser
    events:
      - http:
          path: users
          method: post

  updateUser:
    handler: dist/index.updateUser
    events:
      - http:
          path: users/{id}
          method: put
          request:
            parameters:
              paths:
                id: true

  deleteUser:
    handler: dist/index.deleteUser
    events:
      - http:
          path: users/{id}
          method: delete
          request:
            parameters:
              paths:
                id: true

# CloudFormation resources
resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: users
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1    

plugins: 
  - serverless-dynamodb-local
  - serverless-offline
